// Code generated by scapi/gen. DO NOT EDIT.
package contractsapi

import (
	"github.com/0xPolygon/polygon-edge/types"
)

type InitializeBridgeFn struct {
}

func (i *InitializeBridgeFn) Sig() []byte {
	return Bridge.Abi.Methods["initialize"].ID()
}

func (i *InitializeBridgeFn) EncodeAbi() ([]byte, error) {
	return Bridge.Abi.Methods["initialize"].Encode(i)
}

func (i *InitializeBridgeFn) DecodeAbi(buf []byte) error {
	return decodeMethod(Bridge.Abi.Methods["initialize"], buf, i)
}

type SetDependenciesBridgeFn struct {
	ClaimsAddress        types.Address `abi:"_claimsAddress"`
	SignedBatchesAddress types.Address `abi:"_signedBatchesAddress"`
	SlotsAddress         types.Address `abi:"_slotsAddress"`
	ValidatorsAddress    types.Address `abi:"_validatorsAddress"`
}

func (s *SetDependenciesBridgeFn) Sig() []byte {
	return Bridge.Abi.Methods["setDependencies"].ID()
}

func (s *SetDependenciesBridgeFn) EncodeAbi() ([]byte, error) {
	return Bridge.Abi.Methods["setDependencies"].Encode(s)
}

func (s *SetDependenciesBridgeFn) DecodeAbi(buf []byte) error {
	return decodeMethod(Bridge.Abi.Methods["setDependencies"], buf, s)
}

type InitializeClaimsHelperFn struct {
}

func (i *InitializeClaimsHelperFn) Sig() []byte {
	return ClaimsHelper.Abi.Methods["initialize"].ID()
}

func (i *InitializeClaimsHelperFn) EncodeAbi() ([]byte, error) {
	return ClaimsHelper.Abi.Methods["initialize"].Encode(i)
}

func (i *InitializeClaimsHelperFn) DecodeAbi(buf []byte) error {
	return decodeMethod(ClaimsHelper.Abi.Methods["initialize"], buf, i)
}

type SetDependenciesClaimsHelperFn struct {
	ClaimsAddress        types.Address `abi:"_claimsAddress"`
	SignedBatchesAddress types.Address `abi:"_signedBatchesAddress"`
}

func (s *SetDependenciesClaimsHelperFn) Sig() []byte {
	return ClaimsHelper.Abi.Methods["setDependencies"].ID()
}

func (s *SetDependenciesClaimsHelperFn) EncodeAbi() ([]byte, error) {
	return ClaimsHelper.Abi.Methods["setDependencies"].Encode(s)
}

func (s *SetDependenciesClaimsHelperFn) DecodeAbi(buf []byte) error {
	return decodeMethod(ClaimsHelper.Abi.Methods["setDependencies"], buf, s)
}

type InitializeClaimsFn struct {
	MaxNumberOfTransactions uint16 `abi:"_maxNumberOfTransactions"`
	TimeoutBlocksNumber     uint8  `abi:"_timeoutBlocksNumber"`
}

func (i *InitializeClaimsFn) Sig() []byte {
	return Claims.Abi.Methods["initialize"].ID()
}

func (i *InitializeClaimsFn) EncodeAbi() ([]byte, error) {
	return Claims.Abi.Methods["initialize"].Encode(i)
}

func (i *InitializeClaimsFn) DecodeAbi(buf []byte) error {
	return decodeMethod(Claims.Abi.Methods["initialize"], buf, i)
}

type SetDependenciesClaimsFn struct {
	BridgeAddress       types.Address `abi:"_bridgeAddress"`
	ClaimsHelperAddress types.Address `abi:"_claimsHelperAddress"`
	ValidatorsAddress   types.Address `abi:"_validatorsAddress"`
}

func (s *SetDependenciesClaimsFn) Sig() []byte {
	return Claims.Abi.Methods["setDependencies"].ID()
}

func (s *SetDependenciesClaimsFn) EncodeAbi() ([]byte, error) {
	return Claims.Abi.Methods["setDependencies"].Encode(s)
}

func (s *SetDependenciesClaimsFn) DecodeAbi(buf []byte) error {
	return decodeMethod(Claims.Abi.Methods["setDependencies"], buf, s)
}

type InitializeSignedBatchesFn struct {
}

func (i *InitializeSignedBatchesFn) Sig() []byte {
	return SignedBatches.Abi.Methods["initialize"].ID()
}

func (i *InitializeSignedBatchesFn) EncodeAbi() ([]byte, error) {
	return SignedBatches.Abi.Methods["initialize"].Encode(i)
}

func (i *InitializeSignedBatchesFn) DecodeAbi(buf []byte) error {
	return decodeMethod(SignedBatches.Abi.Methods["initialize"], buf, i)
}

type SetDependenciesSignedBatchesFn struct {
	BridgeAddress       types.Address `abi:"_bridgeAddress"`
	ClaimsHelperAddress types.Address `abi:"_claimsHelperAddress"`
	ValidatorsAddress   types.Address `abi:"_validatorsAddress"`
}

func (s *SetDependenciesSignedBatchesFn) Sig() []byte {
	return SignedBatches.Abi.Methods["setDependencies"].ID()
}

func (s *SetDependenciesSignedBatchesFn) EncodeAbi() ([]byte, error) {
	return SignedBatches.Abi.Methods["setDependencies"].Encode(s)
}

func (s *SetDependenciesSignedBatchesFn) DecodeAbi(buf []byte) error {
	return decodeMethod(SignedBatches.Abi.Methods["setDependencies"], buf, s)
}

type InitializeSlotsFn struct {
}

func (i *InitializeSlotsFn) Sig() []byte {
	return Slots.Abi.Methods["initialize"].ID()
}

func (i *InitializeSlotsFn) EncodeAbi() ([]byte, error) {
	return Slots.Abi.Methods["initialize"].Encode(i)
}

func (i *InitializeSlotsFn) DecodeAbi(buf []byte) error {
	return decodeMethod(Slots.Abi.Methods["initialize"], buf, i)
}

type SetDependenciesSlotsFn struct {
	BridgeAddress     types.Address `abi:"_bridgeAddress"`
	ValidatorsAddress types.Address `abi:"_validatorsAddress"`
}

func (s *SetDependenciesSlotsFn) Sig() []byte {
	return Slots.Abi.Methods["setDependencies"].ID()
}

func (s *SetDependenciesSlotsFn) EncodeAbi() ([]byte, error) {
	return Slots.Abi.Methods["setDependencies"].Encode(s)
}

func (s *SetDependenciesSlotsFn) DecodeAbi(buf []byte) error {
	return decodeMethod(Slots.Abi.Methods["setDependencies"], buf, s)
}

type InitializeValidatorsFn struct {
	Validators []types.Address `abi:"_validators"`
}

func (i *InitializeValidatorsFn) Sig() []byte {
	return Validators.Abi.Methods["initialize"].ID()
}

func (i *InitializeValidatorsFn) EncodeAbi() ([]byte, error) {
	return Validators.Abi.Methods["initialize"].Encode(i)
}

func (i *InitializeValidatorsFn) DecodeAbi(buf []byte) error {
	return decodeMethod(Validators.Abi.Methods["initialize"], buf, i)
}

type SetDependenciesValidatorsFn struct {
	BridgeAddress types.Address `abi:"_bridgeAddress"`
}

func (s *SetDependenciesValidatorsFn) Sig() []byte {
	return Validators.Abi.Methods["setDependencies"].ID()
}

func (s *SetDependenciesValidatorsFn) EncodeAbi() ([]byte, error) {
	return Validators.Abi.Methods["setDependencies"].Encode(s)
}

func (s *SetDependenciesValidatorsFn) DecodeAbi(buf []byte) error {
	return decodeMethod(Validators.Abi.Methods["setDependencies"], buf, s)
}
